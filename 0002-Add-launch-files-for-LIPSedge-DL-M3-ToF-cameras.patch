From a6a103fed31d9b3734d3129c411c1d958b9f61aa Mon Sep 17 00:00:00 2001
From: Tim Cheng <timcheng@lips-hci.com>
Date: Tue, 19 Feb 2019 13:41:53 +0800
Subject: [PATCH 2/2] Add launch files for LIPSedge DL/M3 ToF cameras

1. add launch file for device with default QQQVGA video mode
2. add helper scripts for quick launch and view
---
 .../launch/includes/device.launch.qqqvga.xml  |  64 +++++++++
 openni2_launch/launch/lips_DL.launch          | 122 ++++++++++++++++++
 openni2_launch/launch/lips_M3.launch          | 122 ++++++++++++++++++
 run_DL.sh                                     |   4 +
 run_M3.sh                                     |   4 +
 view.sh                                       |  10 ++
 6 files changed, 326 insertions(+)
 create mode 100644 openni2_launch/launch/includes/device.launch.qqqvga.xml
 create mode 100644 openni2_launch/launch/lips_DL.launch
 create mode 100644 openni2_launch/launch/lips_M3.launch
 create mode 100755 run_DL.sh
 create mode 100755 run_M3.sh
 create mode 100755 view.sh

diff --git a/openni2_launch/launch/includes/device.launch.qqqvga.xml b/openni2_launch/launch/includes/device.launch.qqqvga.xml
new file mode 100644
index 0000000..ae16b77
--- /dev/null
+++ b/openni2_launch/launch/includes/device.launch.qqqvga.xml
@@ -0,0 +1,64 @@
+<!-- Launch the OpenNI2 device driver -->
+<launch>
+
+  <!-- Name of nodelet manager, must be fully resolved -->
+  <arg name="manager" />
+
+  <!-- Driver parameters -->
+  <arg name="device_id" />
+  <arg name="id_manufacturer" />
+  <arg name="id_product" />
+  <arg name="rgb_frame_id" />
+  <arg name="depth_frame_id" />
+  <arg name="rgb_camera_info_url" />
+  <arg name="depth_camera_info_url" />
+
+  <arg name="ir_mode" default="13" />
+  <arg name="color_mode" default="13" />
+  <arg name="depth_mode" default="13" />
+  <arg name="depth_registration" default="true" />
+  <arg name="color_depth_synchronization" default="false" />
+  <arg name="auto_exposure" default="true"
+          doc="This arg is not used. Preserved only for backward compatibility." />
+  <arg name="auto_white_balance" default="true"
+          doc="This arg is not used. Preserved only for backward compatibility." />
+
+  <arg name="respawn" default="false" />
+  <arg     if="$(arg respawn)" name="bond" value="" />
+  <arg unless="$(arg respawn)" name="bond" value="--no-bond" />
+
+  <!-- Remapping arguments -->
+  <arg name="rgb"              default="rgb" />
+  <arg name="ir"               default="ir" />
+  <arg name="depth"            default="depth" />
+  <arg name="depth_registered" default="depth_registered" />
+
+  <!-- Driver nodelet -->
+  <node pkg="nodelet" type="nodelet" name="driver"
+        args="load openni2_camera/OpenNI2DriverNodelet $(arg manager) $(arg bond)"
+	    respawn="$(arg respawn)">
+    <param name="device_id" type="str" value="$(arg device_id)" />
+    <param name="id_manufacturer" type="str" value="$(arg id_manufacturer)" />
+    <param name="id_product" type="str" value="$(arg id_product)" />
+    <param name="rgb_camera_info_url"   value="$(arg rgb_camera_info_url)" />
+    <param name="depth_camera_info_url" value="$(arg depth_camera_info_url)" />
+    <param name="rgb_frame_id"   value="$(arg rgb_frame_id)" />
+    <param name="depth_frame_id" value="$(arg depth_frame_id)" />
+
+    <param name="ir_mode" value="$(arg ir_mode)" />
+    <param name="color_mode" value="$(arg color_mode)" />
+    <param name="depth_mode" value="$(arg depth_mode)" />
+
+    <param name="depth_registration" value="$(arg depth_registration)" />
+    <param name="color_depth_synchronization" value="$(arg color_depth_synchronization)" />
+
+    <remap from="ir" to="$(arg ir)" />
+    <remap from="rgb" to="$(arg rgb)" />
+    <remap from="depth" to="$(arg depth)" />
+    <remap from="depth_registered" to="$(arg depth_registered)" />
+
+    <remap from="$(arg rgb)/image" to="$(arg rgb)/image_raw" />
+    <remap from="$(arg depth)/image" to="$(arg depth_registered)/image_raw" />
+  </node>
+
+</launch>
diff --git a/openni2_launch/launch/lips_DL.launch b/openni2_launch/launch/lips_DL.launch
new file mode 100644
index 0000000..b656595
--- /dev/null
+++ b/openni2_launch/launch/lips_DL.launch
@@ -0,0 +1,122 @@
+<!-- Entry point for using OpenNI2 devices -->
+<launch>
+
+  <arg name="camera" default="camera"
+       doc="'camera' should uniquely identify the device. All topics are pushed down
+            into the 'camera' namespace, and it is prepended to tf frame ids." />
+  <arg name="rgb_frame_id"   default="$(arg camera)_rgb_optical_frame" />
+  <arg name="depth_frame_id" default="$(arg camera)_depth_optical_frame" />
+
+  <arg name="device_id" default="#1"
+       doc="device_id can have the following formats:
+            '#1'  : the first device found
+            '2@X' : the Xth device on USB bus 2"/>
+
+  <arg name="id_manufacturer" default="2df2"
+       doc="Vendor ID of the sensor (maintained at http://www.linux-usb.org/usb-ids.html). Default: LIPS."/>
+  <arg name="id_product" default="0213"
+       doc="Product ID of the sensor. Default: LIPSedge DL."/>
+
+  <arg name="rgb_camera_info_url"   default=""
+       doc="By default, calibrations are stored to file://${ROS_HOME}/camera_info/${NAME}.yaml,
+            where ${NAME} is of the form '[rgb|depth]_[serial#]', e.g. 'depth_B00367707227042B'.
+            See camera_info_manager docs for calibration URL details." />
+  <arg name="depth_camera_info_url" default="" />
+
+  <arg name="depth_registration" default="false"
+       doc="Hardware depth registration" />
+
+  <!-- Driver parameters -->
+  <arg name="color_depth_synchronization"     default="false" />
+  <arg name="auto_exposure"                   default="true"
+          doc="This arg is not used. Preserved only for backward compatibility." />
+  <arg name="auto_white_balance"              default="true"
+          doc="This arg is not used. Preserved only for backward compatibility." />
+
+  <!-- Arguments for remapping all device namespaces -->
+  <arg name="rgb"              default="rgb" />
+  <arg name="ir"               default="ir" />
+  <arg name="depth"            default="depth" />
+
+  <arg name="load_driver" default="true"
+       doc="Optionally suppress loading the driver nodelet and/or publishing the default tf
+       tree. Useful if you are playing back recorded raw data from a bag, or are
+       supplying a more accurate tf tree from calibration." />
+  <arg name="publish_tf" default="true" />
+  <!-- Processing Modules -->
+  <arg name="rgb_processing"                  default="true"  />
+  <arg name="debayer_processing"              default="false" />
+  <arg name="ir_processing"                   default="false" />
+  <arg name="depth_processing"                default="true" />
+  <arg name="depth_registered_processing"     default="true" />
+  <arg name="disparity_processing"            default="false" />
+  <arg name="disparity_registered_processing" default="false" />
+  <arg name="hw_registered_processing"        default="true" if="$(arg depth_registration)" />
+  <arg name="sw_registered_processing"        default="false" if="$(arg depth_registration)" />
+  <arg name="hw_registered_processing"        default="false" unless="$(arg depth_registration)" />
+  <arg name="sw_registered_processing"        default="true" unless="$(arg depth_registration)" />
+
+  <arg name="respawn" default="false"
+       doc="Disable bond topics by default" />
+
+  <arg name="num_worker_threads" default="4"
+       doc="Worker threads for the nodelet manager" />
+
+  <!-- Push down all topics/nodelets into "camera" namespace -->
+  <group ns="$(arg camera)">
+
+	  <!-- Start nodelet manager -->
+	  <arg name="manager" value="$(arg camera)_nodelet_manager" />
+	  <arg name="debug" default="false" /> <!-- Run manager in GDB? -->
+	  <include file="$(find rgbd_launch)/launch/includes/manager.launch.xml">
+	    <arg name="name" value="$(arg manager)" />
+	    <arg name="debug" value="$(arg debug)" />
+	    <arg name="num_worker_threads"  value="$(arg num_worker_threads)" />
+	  </include>
+
+    <!-- Load driver -->
+    <include if="$(arg load_driver)"
+	     file="$(find openni2_launch)/launch/includes/device.launch.xml">
+      <arg name="manager"                         value="$(arg manager)" />
+      <arg name="device_id"                       value="$(arg device_id)" />
+      <arg name="id_manufacturer"                 value="$(arg id_manufacturer)" />
+      <arg name="id_product"                      value="$(arg id_product)" />
+      <arg name="rgb_frame_id"                    value="$(arg rgb_frame_id)" />
+      <arg name="depth_frame_id"                  value="$(arg depth_frame_id)" />
+      <arg name="rgb_camera_info_url"             value="$(arg rgb_camera_info_url)" />
+      <arg name="depth_camera_info_url"           value="$(arg depth_camera_info_url)" />
+      <arg name="rgb"                             value="$(arg rgb)" />
+      <arg name="ir"                              value="$(arg ir)" />
+      <arg name="depth"                           value="$(arg depth)" />
+      <arg name="respawn"                         value="$(arg respawn)" />
+      <arg name="depth_registration"              value="$(arg depth_registration)" />
+      <arg name="color_depth_synchronization"     value="$(arg color_depth_synchronization)" />
+    </include>
+
+    <!-- Load standard constellation of processing nodelets -->
+    <include file="$(find rgbd_launch)/launch/includes/processing.launch.xml">
+      <arg name="manager"                         value="$(arg manager)" />
+      <arg name="rgb"                             value="$(arg rgb)" />
+      <arg name="ir"                              value="$(arg ir)" />
+      <arg name="depth"                           value="$(arg depth)" />
+      <arg name="respawn"                         value="$(arg respawn)" />
+      <arg name="rgb_processing"                  value="$(arg rgb_processing)" />
+      <arg name="debayer_processing"              value="$(arg debayer_processing)" />
+      <arg name="ir_processing"                   value="$(arg ir_processing)" />
+      <arg name="depth_processing"                value="$(arg depth_processing)" />
+      <arg name="depth_registered_processing"     value="$(arg depth_registered_processing)" />
+      <arg name="disparity_processing"            value="$(arg disparity_processing)" />
+      <arg name="disparity_registered_processing" value="$(arg disparity_registered_processing)" />
+      <arg name="hw_registered_processing"        value="$(arg hw_registered_processing)" />
+      <arg name="sw_registered_processing"        value="$(arg sw_registered_processing)" />
+    </include>
+
+  </group> <!-- camera -->
+
+  <!-- Load reasonable defaults for the relative pose between cameras -->
+  <include if="$(arg publish_tf)"
+	   file="$(find rgbd_launch)/launch/kinect_frames.launch">
+    <arg name="camera" value="$(arg camera)" />
+  </include>
+
+</launch>
diff --git a/openni2_launch/launch/lips_M3.launch b/openni2_launch/launch/lips_M3.launch
new file mode 100644
index 0000000..0d01024
--- /dev/null
+++ b/openni2_launch/launch/lips_M3.launch
@@ -0,0 +1,122 @@
+<!-- Entry point for using OpenNI2 devices -->
+<launch>
+
+  <arg name="camera" default="camera"
+       doc="'camera' should uniquely identify the device. All topics are pushed down
+            into the 'camera' namespace, and it is prepended to tf frame ids." />
+  <arg name="rgb_frame_id"   default="$(arg camera)_rgb_optical_frame" />
+  <arg name="depth_frame_id" default="$(arg camera)_depth_optical_frame" />
+
+  <arg name="device_id" default="#1"
+       doc="device_id can have the following formats:
+            '#1'  : the first device found
+            '2@X' : the Xth device on USB bus 2"/>
+
+  <arg name="id_manufacturer" default="2df2"
+       doc="Vendor ID of the sensor (maintained at http://www.linux-usb.org/usb-ids.html). Default: LIPS."/>
+  <arg name="id_product" default="0214"
+       doc="Product ID of the sensor. Default: LIPSedge M3."/>
+
+  <arg name="rgb_camera_info_url"   default=""
+       doc="By default, calibrations are stored to file://${ROS_HOME}/camera_info/${NAME}.yaml,
+            where ${NAME} is of the form '[rgb|depth]_[serial#]', e.g. 'depth_B00367707227042B'.
+            See camera_info_manager docs for calibration URL details." />
+  <arg name="depth_camera_info_url" default="" />
+
+  <arg name="depth_registration" default="false"
+       doc="Hardware depth registration" />
+
+  <!-- Driver parameters -->
+  <arg name="color_depth_synchronization"     default="false" />
+  <arg name="auto_exposure"                   default="true"
+          doc="This arg is not used. Preserved only for backward compatibility." />
+  <arg name="auto_white_balance"              default="true"
+          doc="This arg is not used. Preserved only for backward compatibility." />
+
+  <!-- Arguments for remapping all device namespaces -->
+  <arg name="rgb"              default="rgb" />
+  <arg name="ir"               default="ir" />
+  <arg name="depth"            default="depth" />
+
+  <arg name="load_driver" default="true"
+       doc="Optionally suppress loading the driver nodelet and/or publishing the default tf
+       tree. Useful if you are playing back recorded raw data from a bag, or are
+       supplying a more accurate tf tree from calibration." />
+  <arg name="publish_tf" default="true" />
+  <!-- Processing Modules -->
+  <arg name="rgb_processing"                  default="true"  />
+  <arg name="debayer_processing"              default="false" />
+  <arg name="ir_processing"                   default="false" />
+  <arg name="depth_processing"                default="true" />
+  <arg name="depth_registered_processing"     default="true" />
+  <arg name="disparity_processing"            default="false" />
+  <arg name="disparity_registered_processing" default="false" />
+  <arg name="hw_registered_processing"        default="true" if="$(arg depth_registration)" />
+  <arg name="sw_registered_processing"        default="false" if="$(arg depth_registration)" />
+  <arg name="hw_registered_processing"        default="false" unless="$(arg depth_registration)" />
+  <arg name="sw_registered_processing"        default="true" unless="$(arg depth_registration)" />
+
+  <arg name="respawn" default="false"
+       doc="Disable bond topics by default" />
+
+  <arg name="num_worker_threads" default="4"
+       doc="Worker threads for the nodelet manager" />
+
+  <!-- Push down all topics/nodelets into "camera" namespace -->
+  <group ns="$(arg camera)">
+
+	  <!-- Start nodelet manager -->
+	  <arg name="manager" value="$(arg camera)_nodelet_manager" />
+	  <arg name="debug" default="false" /> <!-- Run manager in GDB? -->
+	  <include file="$(find rgbd_launch)/launch/includes/manager.launch.xml">
+	    <arg name="name" value="$(arg manager)" />
+	    <arg name="debug" value="$(arg debug)" />
+	    <arg name="num_worker_threads"  value="$(arg num_worker_threads)" />
+	  </include>
+
+    <!-- Load driver -->
+    <include if="$(arg load_driver)"
+	     file="$(find openni2_launch)/launch/includes/device.launch.qqqvga.xml">
+      <arg name="manager"                         value="$(arg manager)" />
+      <arg name="device_id"                       value="$(arg device_id)" />
+      <arg name="id_manufacturer"                 value="$(arg id_manufacturer)" />
+      <arg name="id_product"                      value="$(arg id_product)" />
+      <arg name="rgb_frame_id"                    value="$(arg rgb_frame_id)" />
+      <arg name="depth_frame_id"                  value="$(arg depth_frame_id)" />
+      <arg name="rgb_camera_info_url"             value="$(arg rgb_camera_info_url)" />
+      <arg name="depth_camera_info_url"           value="$(arg depth_camera_info_url)" />
+      <arg name="rgb"                             value="$(arg rgb)" />
+      <arg name="ir"                              value="$(arg ir)" />
+      <arg name="depth"                           value="$(arg depth)" />
+      <arg name="respawn"                         value="$(arg respawn)" />
+      <arg name="depth_registration"              value="$(arg depth_registration)" />
+      <arg name="color_depth_synchronization"     value="$(arg color_depth_synchronization)" />
+    </include>
+
+    <!-- Load standard constellation of processing nodelets -->
+    <include file="$(find rgbd_launch)/launch/includes/processing.launch.xml">
+      <arg name="manager"                         value="$(arg manager)" />
+      <arg name="rgb"                             value="$(arg rgb)" />
+      <arg name="ir"                              value="$(arg ir)" />
+      <arg name="depth"                           value="$(arg depth)" />
+      <arg name="respawn"                         value="$(arg respawn)" />
+      <arg name="rgb_processing"                  value="$(arg rgb_processing)" />
+      <arg name="debayer_processing"              value="$(arg debayer_processing)" />
+      <arg name="ir_processing"                   value="$(arg ir_processing)" />
+      <arg name="depth_processing"                value="$(arg depth_processing)" />
+      <arg name="depth_registered_processing"     value="$(arg depth_registered_processing)" />
+      <arg name="disparity_processing"            value="$(arg disparity_processing)" />
+      <arg name="disparity_registered_processing" value="$(arg disparity_registered_processing)" />
+      <arg name="hw_registered_processing"        value="$(arg hw_registered_processing)" />
+      <arg name="sw_registered_processing"        value="$(arg sw_registered_processing)" />
+    </include>
+
+  </group> <!-- camera -->
+
+  <!-- Load reasonable defaults for the relative pose between cameras -->
+  <include if="$(arg publish_tf)"
+	   file="$(find rgbd_launch)/launch/kinect_frames.launch">
+    <arg name="camera" value="$(arg camera)" />
+  </include>
+
+</launch>
diff --git a/run_DL.sh b/run_DL.sh
new file mode 100755
index 0000000..171b0f1
--- /dev/null
+++ b/run_DL.sh
@@ -0,0 +1,4 @@
+#!/bin/bash
+catkin_make
+source ./devel/setup.bash
+roslaunch openni2_launch lips_DL.launch
diff --git a/run_M3.sh b/run_M3.sh
new file mode 100755
index 0000000..988d8d4
--- /dev/null
+++ b/run_M3.sh
@@ -0,0 +1,4 @@
+#!/bin/bash
+catkin_make
+source ./devel/setup.bash
+roslaunch openni2_launch lips_M3.launch
diff --git a/view.sh b/view.sh
new file mode 100755
index 0000000..b64367d
--- /dev/null
+++ b/view.sh
@@ -0,0 +1,10 @@
+#!/bin/bash
+#
+# To view RGB-D
+#rosrun image_view image_view image:=/camera/rgb/raw_image &
+#rosrun image_view image_view image:=/camera/depth/image &
+#
+# To view Depth-IR
+#rosrun image_view image_view image:=/camera/depth/image &
+#rosrun image_view image_view image:=/camera/ir/image &
+rqt
-- 
2.25.1

